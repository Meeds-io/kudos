<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- Copyright (C) 2019 eXo Platform SAS. This is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1 of the License, or (at your option) any later version. This software is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License 
  for more details. You should have received a copy of the GNU Lesser General Public License along with this software; if not, write to the Free Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA, or see the FSF site: http://www.fsf.org. -->
<configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.exoplatform.org/xml/ns/kernel_1_2.xsd http://www.exoplatform.org/xml/ns/kernel_1_2.xsd" xmlns="http://www.exoplatform.org/xml/ns/kernel_1_2.xsd">

  <component>
    <type>org.exoplatform.services.rest.impl.ProvidersRegistry</type>
  </component>

  <component>
    <type>org.exoplatform.services.rest.impl.RequestHandlerImpl</type>
  </component>

  <component>
    <type>org.exoplatform.services.rest.impl.RequestDispatcher</type>
  </component>

  <!-- Request/Response filters. -->
  <component>
    <type>org.exoplatform.services.rest.impl.ProvidersRegistry</type>
  </component>

  <component>
    <type>org.exoplatform.services.rest.impl.ResourceBinder</type>
  </component>

  <component>
    <type>org.exoplatform.services.rest.impl.provider.JAXBContextResolver</type>
  </component>

  <component>
    <key>org.exoplatform.services.organization.OrganizationService</key>
    <type>org.exoplatform.services.organization.impl.mock.DummyOrganizationService</type>
  </component>

  <component>
    <key>org.exoplatform.social.core.space.spi.SpaceService</key>
    <type>org.exoplatform.kudos.test.mock.SpaceServiceMock</type>
  </component>

  <component>
    <key>org.exoplatform.social.core.manager.IdentityManager</key>
    <type>org.exoplatform.kudos.test.mock.IdentityManagerMock</type>
  </component>

  <component>
    <key>org.exoplatform.social.core.storage.api.ActivityStorage</key>
    <type>org.exoplatform.kudos.test.mock.ActivityStorageMock</type>
  </component>

  <component>
    <key>org.exoplatform.social.core.manager.ActivityManager</key>
    <type>org.exoplatform.kudos.test.mock.ActivityManagerMock</type>
  </component>

  <component>
    <key>org.exoplatform.portal.config.UserPortalConfigService</key>
    <type>org.exoplatform.kudos.test.mock.MockUserPortalConfigService</type>
  </component>

  <component>
    <key>org.exoplatform.commons.api.persistence.DataInitializer</key>
    <type>org.exoplatform.commons.persistence.impl.LiquibaseDataInitializer</type>
    <init-params>
      <value-param>
        <name>liquibase.datasource</name>
        <value>java:/comp/env/exo-jpa_portal</value>
      </value-param>
      <value-param>
        <name>liquibase.contexts</name>
        <value>${exo.liquibase.contexts}</value>
      </value-param>
    </init-params>
  </component>

  <component>
    <key>org.exoplatform.services.database.HibernateService</key>
    <jmx-name>database:type=HibernateService</jmx-name>
    <type>org.exoplatform.services.organization.idm.CustomHibernateServiceImpl</type>
    <init-params>
      <properties-param>
        <name>hibernate.properties</name>
        <description>Default Hibernate Service</description>
        <property name="hibernate.hbm2ddl.auto" value="create-drop"/>
        <property name="hibernate.show_sql" value="false"/>
        <property name="hibernate.current_session_context_class" value="thread"/>
        <property name="hibernate.cache.use_second_level_cache" value="false"/>
        <property name="hibernate.cache.use_query_cache" value="false"/>
        <property name="hibernate.connection.datasource" value="java:/comp/env/exo-jpa_portal"/>
        <property name="hibernate.c3p0.min_size" value="5"/>
        <property name="hibernate.c3p0.max_size" value="20"/>
        <property name="hibernate.c3p0.timeout" value="1800"/>
        <property name="hibernate.c3p0.max_statements" value="50"/>
        <property name="hibernate.enable_lazy_load_no_trans" value="true"/>
      </properties-param>
    </init-params>
  </component>

  <component>
    <key>org.exoplatform.portal.config.UserACL</key>
    <type>org.exoplatform.portal.config.UserACL</type>
    <init-params>
      <value-param>
        <name>super.user</name>
        <description>administrator</description>
        <value>root</value>
      </value-param>

      <value-param>
        <name>portal.administrator.groups</name>
        <description>administrator</description>
        <value>/platform/administrators</value>
      </value-param>

      <value-param>
        <name>portal.administrator.mstype</name>
        <description>administrator</description>
        <value>manager</value>
      </value-param>

      <value-param>
        <name>portal.creator.groups</name>
        <description>groups with membership type have permission to manage portal</description>
        <value>*:/platform/administrators,*:/organization/management/executive-board</value>
      </value-param>

      <value-param>
        <name>navigation.creator.membership.type</name>
        <description>specific membership type have full permission with group navigation</description>
        <value>manager</value>
      </value-param>

      <value-param>
        <name>guests.group</name>
        <description>guests group</description>
        <value>/platform/guests</value>
      </value-param>

      <values-param>
        <name>mandatory.groups</name>
        <description>Groups that can not be deleted.</description>
        <value>/platform/administrators</value>
        <value>/platform/users</value>
        <value>/platform/guests</value>
        <value>/spaces</value>
      </values-param>

      <values-param>
        <name>mandatory.mstypes</name>
        <description>Membership type that can not be deleted.</description>
        <value>member</value>
        <value>manager</value>
        <value>*</value>
      </values-param>
    </init-params>
  </component>

  <external-component-plugins>
    <target-component>org.exoplatform.services.rest.impl.RequestHandlerImpl</target-component>
    <component-plugin>
      <name>ws.rs.response.filter</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.services.rest.impl.ResponseFilterComponentPlugin</type>
      <init-params>
        <value-param>
          <name>ws.rs.response.social-response-filter</name>
          <value>org.exoplatform.social.rest.filter.SocialResponseFilter</value>
        </value-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>
  <!-- Request/Response filters. -->

  <external-component-plugins>
    <target-component>org.exoplatform.services.rest.impl.provider.JAXBContextResolver</target-component>
    <component-plugin>
      <name>ws.rs.jaxb.context</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.services.rest.impl.provider.JAXBContextComponentPlugin</type>
      <init-params>
        <value-param>
          <name>wadl.application</name>
          <value>org.exoplatform.services.rest.wadl.research.Application</value>
        </value-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>

  <external-component-plugins>
    <target-component>org.exoplatform.services.rest.impl.RequestHandlerImpl</target-component>
    <component-plugin>
      <name>ws.rs.entity.provider</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.services.rest.impl.provider.EntityProviderComponentPlugin</type>
        <!-- NOTE it is just example of configuration. -->
        <!-- StringEntityProvider is part of REST framework, not needs to add it from configuration -->
        <!--
        <init-params>
           <value-param>
              <name>strings</name>
              <value>org.exoplatform.services.rest.impl.provider.StringEntityProvider</value>
           </value-param>
        </init-params>
        -->
    </component-plugin>
    <component-plugin>
      <name>ws.rs.method.filter</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.services.rest.impl.method.MethodInvokerFilterComponentPlugin</type>
        <!--
        <init-params>
           <value-param>
              <name>name</name>
              <value>filter class</value>
           </value-param>
        </init-params>
        -->
    </component-plugin>
  </external-component-plugins>

  <remove-configuration>org.exoplatform.commons.search.index.IndexingOperationProcessor</remove-configuration>
  <remove-configuration>org.exoplatform.commons.search.rest.IndexingManagementRestServiceV1</remove-configuration>
</configuration>
